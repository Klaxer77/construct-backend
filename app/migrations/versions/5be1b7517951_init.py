"""init

Revision ID: 5be1b7517951
Revises: 
Create Date: 2025-09-27 14:14:40.017874

"""
from typing import Sequence, Union

from alembic import op
import geoalchemy2
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5be1b7517951'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS postgis;")
    op.create_table('company',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('objects_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('using_id', sa.BigInteger(), nullable=False),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('fio', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('CONSTRUCTION_CONTROL', 'CONTRACTOR', 'INSPECTIION', name='user_role_enum'), nullable=False),
    sa.Column('access_expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('objects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('using_id', sa.String(length=255), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('is_contractor', sa.Boolean(), nullable=False),
    sa.Column('general_info', sa.Text(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('responsible_user_id', sa.UUID(), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('date_delivery_verification', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('LEAD', 'DELAY', 'PLAN', 'KNOWN', 'ACT', name='object_statuses_enum'), nullable=False),
    sa.Column('object_type', sa.Enum('ACTIVE', 'NOT_ACTIVE', 'AGREEMENT', 'ACT_OPENING', name='object_type_enum'), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['objects_categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('using_id')
    )
    # op.create_index('idx_objects_geom', 'objects', ['geom'], unique=False, postgresql_using='gist')
    op.create_table('refresh_session',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('refresh_token', sa.UUID(), nullable=False),
    sa.Column('expires_in', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_refresh_session_user_id_hash', 'refresh_session', ['user_id'], unique=False, postgresql_using='hash')
    op.create_table('remarks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date_remark', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('expiration_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('responsible_user_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('FIXED', 'NOT_FIXED', 'REVIEW', name='remark_status_enum'), nullable=False),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('violations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date_violation', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('expiration_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('responsible_user_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('FIXED', 'NOT_FIXED', 'REVIEW', name='violation_status_enum'), nullable=False),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('acts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('file_url', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('VERIFIED', 'NOT_VERIFIED', name='act_status_enum'), nullable=False),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('date_verification', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('object_id')
    )
    op.create_table('object_nfc',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('nfc_uid', sa.String(length=255), nullable=False),
    sa.Column('label', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nfc_uid')
    )
    op.create_table('remarks_item',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('violations', sa.Text(), nullable=False),
    sa.Column('name_regulatory_docx', sa.Text(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('date_remark', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('expiration_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('responsible_user_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('FIXED', 'NOT_FIXED', 'REVIEW', name='remark_status_enum'), nullable=False),
    sa.Column('remarks_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['remarks_id'], ['remarks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('violations_item',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('violations', sa.Text(), nullable=False),
    sa.Column('name_regulatory_docx', sa.Text(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('object_id', sa.UUID(), nullable=False),
    sa.Column('date_violation', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('expiration_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('responsible_user_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('FIXED', 'NOT_FIXED', 'REVIEW', name='violation_status_enum'), nullable=False),
    sa.Column('violations_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['violations_id'], ['violations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('act_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('act_id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('YES', 'NO', 'NOT_REQUIRED', name='document_status_enum'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['act_id'], ['acts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history_object_nfc',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nfc_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['nfc_id'], ['object_nfc.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('remark_photos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('remark_item_id', sa.UUID(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['remark_item_id'], ['remarks_item.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('violation_photos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('violation_item_id', sa.UUID(), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['violation_item_id'], ['violations_item.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('violation_photos')
    op.drop_table('remark_photos')
    op.drop_table('history_object_nfc')
    op.drop_table('act_documents')
    op.drop_table('violations_item')
    op.drop_table('remarks_item')
    op.drop_table('object_nfc')
    op.drop_table('acts')
    op.drop_table('violations')
    op.drop_table('remarks')
    op.drop_index('ix_refresh_session_user_id_hash', table_name='refresh_session', postgresql_using='hash')
    op.drop_table('refresh_session')
    op.drop_index('idx_objects_geom', table_name='objects', postgresql_using='gist')
    op.drop_table('objects')
    op.drop_table('users')
    op.drop_table('objects_categories')
    op.drop_table('company')
    # ### end Alembic commands ###
